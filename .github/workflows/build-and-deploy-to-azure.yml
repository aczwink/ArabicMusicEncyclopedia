name: Build and deploy to Azure

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    name: Build and Deploy

    steps:
    - uses: actions/checkout@v4

    #setup build tools
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    #build acts-util-core
    - name: Checkout ACTS-Util repo
      uses: actions/checkout@v4
      with:
        repository: aczwink/ACTS-Util
        path: actsutil

    - name: Building acts-util-core
      run: |
        npm install
        npm run compile
        npm link
      working-directory: ./actsutil/core

    #build acts-util-node
    - name: Building acts-util-node
      run: |
        npm link acts-util-core
        npm install
        npm run build
        npm link
      working-directory: ./actsutil/node

    #build acts-util-apilib
    - name: Building acts-util-apilib
      run: |
        npm link acts-util-core acts-util-node
        npm install
        npm run build
        npm link
      working-directory: ./actsutil/apilib

    #build acfrontend
    - name: Checkout ACFrontEnd repo
      uses: actions/checkout@v4
      with:
        repository: aczwink/ACFrontEnd
        path: acfrontend

    - name: Building acfrontend
      run: |
        npm link acts-util-core
        npm install
        npm run compile
        npm run build
        npm link
      working-directory: ./acfrontend

    #build acfrontend
    - name: Checkout OpenArabicMusicDB repo
      uses: actions/checkout@v4
      with:
        repository: aczwink/OpenArabicMusicDB
        path: openarabicmusicdb

    - name: Building openarabicmusicdb-domain
      run: |
        npm install
        npm run build
        npm link
      working-directory: ./openarabicmusicdb/domain

    #build backend
    - name: Build backend
      run: |
        npm link acts-util-apilib acts-util-core acts-util-node openarabicmusicdb-domain
        npm install
        npm run build-release-package
      working-directory: ./backend

    #build frontend
    - name: Build frontend
      run: |
        npm link acfrontend acts-util-apilib acts-util-core openarabicmusicdb-domain
        npm generate-api-and-theme
        npm run create-release-pkg
      working-directory: ./frontend

    #publish images      
    - name: Log in to the Container registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push backend image
      uses: docker/build-push-action@v4
      with:
        context: ./backend
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ghcr.io/aczwink/arabicmusicencyclopedia:latest

    # deploy backend to azure
    - uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    #Deploy infrastructure
    - name: Deploy infrastructure
      uses: azure/arm-deploy@v1
      with:
        subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        resourceGroupName: arabicmusicencyclopedia
        template: ./infrastructure/deploy.bicep
        parameters: ./infrastructure/deployParams.json
        failOnStdErr: false

    - uses: azure/webapps-deploy@v3
      with:
        app-name: 'arabicmusicencyclopedia-backend'
        package: 'backend/dist/'
        
    - name: logout
      run: |
        az logout
        
    #Deploying frontend to azure
    - name: Deploy
      id: builddeploy
      uses: Azure/static-web-apps-deploy@v1
      with:
        azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        action: "upload"
        app_location: "/frontend/dist"
        api_location: ${{ env.API_LOCATION }}
        skip_app_build: true
        skip_api_build: true
        output_location: ""
        is_static_export: true
